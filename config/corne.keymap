/*
 * Copyright (c) 2020 The ZMK Contributors
 * testing
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2



/ {
        keymap {
                compatible = "zmk,keymap";

        default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp ESC      &kp Q   &kp W   &kp E       &kp R       &kp T               &kp Y      &kp U            &kp I       &kp O       &kp P       &kp SQT
   &kp TAB      &kp A   &kp S   &kp D       &kp F       &kp G               &kp H      &kp J            &kp K       &kp L       &kp SEMI    &kp PLUS
   &kp LCTRL    &kp Z   &kp X   &kp C       &kp V       &kp B               &kp N      &kp M            &kp COMMA   &kp DOT     &kp FSLH    &kp MINUS
                                &kp LSHFT   &kp BSPC    &kp LGUI            &kp RET    &lt LOWER SPACE  &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp ESC      &kp EXCL    &kp AT      &kp UP      &kp TAB     &tog RAISE              &kp GRAVE &kp N7  &kp N8  &kp N9  &kp N0      &kp BSPC
   &bt BT_CLR   &kp LPAR    &kp LEFT    &kp DOWN    &kp RIGHT   &kp RPAR                &kp SQT   &kp N4  &kp N5  &kp N6  &kp HASH    &kp PRCNT
   &kp LSHFT    &kp LBKT    &kp RBKT    &kp DLLR    &kp LBRC    &kp RBRC                &kp EQUAL &kp N1  &kp N2  &kp N3  &kp BSLH    &kp AMPS
                                        &kp LSHFT   &kp DEL     &kp LALT                &trans    &trans  &kp N0
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  {  |  }  | "|" |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  [  |  ]  |  \  |  ~   | 
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kt DEFAULT &kp C_MUTE     &trans       &trans      &trans      &tog RAISE          &trans          &trans          &trans          &trans          &trans          &trans
   &trans       &kp C_VOL_UP   &trans       &trans      &trans      &trans              &rgb_ug RGB_TOG &rgb_ug RGB_EFF &rgb_ug RGB_BRI &rgb_ug RGB_BRD &trans          &trans
   &trans       &kp C_VOL_DN   &kp C_PREV   &kp C_PLAY  &kp C_NEXT  &trans              &bt BT_CLR      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4
                                            &trans      &trans      &trans              &trans          &trans          &trans
                        >;
                };
        };
};
